events { 
    worker_connections 1024; 
}

# Process running as non-root user
pid /run/nginx/nginx.pid;

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Temporary directories for non-root execution
    client_body_temp_path /var/lib/nginx/tmp/client_body;
    proxy_temp_path /var/lib/nginx/tmp/proxy;
    fastcgi_temp_path /var/lib/nginx/tmp/fastcgi;
    uwsgi_temp_path /var/lib/nginx/tmp/uwsgi;
    scgi_temp_path /var/lib/nginx/tmp/scgi;
    
    # Logging to stdout/stderr
    access_log /dev/stdout;
    error_log /dev/stderr warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=payment:10m rate=2r/s;
    
    # Client settings
    client_max_body_size 10M;
    
    # CORS origin mapping
    map $http_origin $cors_origin {
        default "";
        "https://oraclelumira.com" "https://oraclelumira.com";
        "https://desk.oraclelumira.com" "https://desk.oraclelumira.com";
        "http://localhost:3000" "http://localhost:3000";
        "http://localhost:5173" "http://localhost:5173";
    }

    upstream api_backend {
        server 127.0.0.1:3000;
        keepalive 32;
    }

    server {
        listen 8080;
        server_name oraclelumira.com localhost;
        root /usr/share/nginx/html;
        index index.html;
        client_max_body_size 10M;
        
        # Payment routes get stricter rate limiting (most specific first)
        location /api/stripe/ {
            limit_req zone=payment burst=5 nodelay;
            
            # CORS is handled by the API backend (Express cors middleware).
            # Avoid adding Access-Control-Allow-* headers here to prevent duplicate headers when proxied.
            
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # API routes â†’ Backend Node.js (general API proxy)
        location /api/ {
            # Apply rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # CORS is handled by the API backend (Express cors middleware).
            # Do not add Access-Control-Allow-* headers here to avoid duplicates.
            
            # CORS preflight handling is delegated to the backend.
            
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Static assets caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Frontend SPA routes (React Router)
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache HTML files for shorter time
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
        }
        
        # Health check endpoint (for load balancers)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
