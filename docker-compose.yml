version: '3.8'

services:
  api:
    build: 
      context: ./apps/api-backend
      dockerfile: Dockerfile
    container_name: oracle-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://root:${MONGO_ROOT_PASSWORD:-lumiraSecure2024}@mongo:27017/lumira-mvp?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - FRONTEND_URL=${FRONTEND_URL:-https://oraclelumira.com}
      - CORS_ORIGIN=${CORS_ORIGIN:-https://oraclelumira.com,https://desk.oraclelumira.com}
      - ENABLE_DEBUG_ROUTES=false
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - lumira-internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  main-app:
    build:
      context: ./apps/main-app  
      dockerfile: Dockerfile
    container_name: oracle-main
    restart: unless-stopped
    environment:
      - API_BASE_URL=${API_BASE_URL:-https://oraclelumira.com/api}
    networks:
      - lumira-internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health.json"]
      interval: 30s
      timeout: 5s
      retries: 3

  expert-desk:
    build:
      context: ./apps/expert-desk
      dockerfile: Dockerfile
    container_name: oracle-desk
    restart: unless-stopped
    environment:
      - API_BASE_URL=${API_BASE_URL:-https://oraclelumira.com/api}
      - DESK_HOSTNAME=${DESK_HOSTNAME:-desk.oraclelumira.com}
    networks:
      - lumira-internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health.json"]
      interval: 30s
      timeout: 5s
      retries: 3

  mongo:
    image: mongo:7.0
    container_name: oracle-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-lumiraSecure2024}
      - MONGO_INITDB_DATABASE=lumira-mvp
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - lumira-internal
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.admin.command('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    # No exposed ports - internal network only for security

volumes:
  mongo_data:
    driver: local

networks:
  lumira-internal:
    driver: bridge
